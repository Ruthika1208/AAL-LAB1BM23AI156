#include <stdio.h>

int main() {
    int arr[] = {12, 1, 13, 35, 6, 17};
    int n = sizeof(arr) / sizeof(arr[0]);
    int i;

    
    for ( i = n / 2 - 1; i >= 0; i--) {
        int largest = i;
        int left = 2 * i + 1;
        int right = 2 * i + 2;

      
        if (left < n && arr[left] > arr[largest]) {
            largest = left;
        }


        if (right < n && arr[right] > arr[largest]) {
            largest = right;
        }

    
        if (largest != i) {
            int temp = arr[i];
            arr[i] = arr[largest];
            arr[largest] = temp;

            int j = largest;
            while (2 * j + 1 < n) {
                int leftChild = 2 * j + 1;
                int rightChild = 2 * j + 2;
                int largestChild = j;

                if (leftChild < n && arr[leftChild] > arr[largestChild]) {
                    largestChild = leftChild;
                }

                if (rightChild < n && arr[rightChild] > arr[largestChild]) {
                    largestChild = rightChild;
                }

                if (largestChild == j) {
                    break;
                }

             
                temp = arr[j];
                arr[j] = arr[largestChild];
                arr[largestChild] = temp;

                j = largestChild;
            }
        }
    }

    for ( i = n - 1; i > 0; i--) {
 
        int temp = arr[0];
        arr[0] = arr[i];
        arr[i] = temp;

        int j = 0;
        while (2 * j + 1 < i) {
            int leftChild = 2 * j + 1;
            int rightChild = 2 * j + 2;
            int largestChild = j;

            if (leftChild < i && arr[leftChild] > arr[largestChild]) {
                largestChild = leftChild;
            }

            if (rightChild < i && arr[rightChild] > arr[largestChild]) {
                largestChild = rightChild;
            }

            if (largestChild == j) {
                break;
            }

            temp = arr[j];
            arr[j] = arr[largestChild];
            arr[largestChild] = temp;

            j = largestChild;
        }
    }

    printf("Sorted array: ");
    for (i = 0; i < n; i++) {
        printf("%d ", arr[i]);
    }
    printf("\n");

    return 0;
}
